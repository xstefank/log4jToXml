<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">

<article>
    <title>log4jToXml</title>
    <subtitle>Final report</subtitle>
  
    <articleinfo>
        <author>
            <firstname>Lukáš</firstname>
            <surname>Linhart</surname>
        </author>
    </articleinfo>
    
    <section>
        <title>Decrition of working part</title>
        <para>
            My part of this project was creating user interface and supporting testing part.
            Main part was programming console interface and graphical interface.
        </para>
    </section>
    
    <section>
        <title>Console interface</title>
        <para>
            Console interface is controled by parameters which define type of input file.
            Also there are parameters for setting path for output file, viewing manual (help) and launching program in grahical mode.
        </para>
    </section>
    
    <section>
        <title>Using console interface</title>
        <para>
            Parameter -p determine that input file will be properies file. Converted file will be XML configuration for log4j.
            Parameter -x determine that input file will be XML file. Converting will be from XML to properties file.
            Parameter -n set path for output file. If it isn't used, path for output file will be same as path of input file with suffix of converted format.
            Parameter -h display help and parameter -g launch program in grahical mode.   
        </para>
    </section>
    
    <section>
        <title>Using graphical interface</title>
        <para>
            Graphical inteface is very simple.
            Choise of input format is prepared by swiching radio buttons. Opening file is in menu by opening dialog.
            Saving converted file can be done by two ways. Implicit save saves file same as command line application without parameter -n.
            Second way is choosing destination of output file by save dialog.
        </para>
    </section>
    
    <section>
        <title>Comparing two XML files</title>
        <para>
            My implementaion of this problem is creating two sets of string information of each element in document and comparing them.
            Class recusively go through DOM tree and write down information of elements and their attributes to set. 
            Two set are compared. If they equals, compare method return true. Comparing is case sensitive.
        </para>
    </section>
    
    <section>
        <title>Conclusion</title>
        <para>
            I gained new experience which will be useful in next projects. It's more difficult to manage project in bigger group without concrete agreerment.
            But it's easier to develope new functionality and repare and find bugs.
        </para>
    </section>
</article>