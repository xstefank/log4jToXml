/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package log4JToXml.gui;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import log4JToXml.console.ConsoleInterface;
import log4JToXml.propertiesToXml.XmlPropertiesBuilder;
import log4JToXml.xmlToProperties.XmlToLog4jConverter;
import log4JToXml.xmlToProperties.XmlToLog4jConverterImpl;

/**
 * Graphical interface for log4jToXml for simple converting configuration files
 * @author Lukáš Linhart
 * @version 1.0
 */
public class Gui extends javax.swing.JFrame
{
    private File input = null;
    private File output = null;
    private ConvertorSwingWorker convertorSwingWorker = null;
    /**
     * Creates new form Gui
     */
    public Gui()
    {
        initComponents();
        toXMLRadioButton.setSelected(true);
        saveMenuItem.setEnabled(false);
        saveAsMenuItem.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jFileChooser1 = new javax.swing.JFileChooser();
        toXMLRadioButton = new javax.swing.JRadioButton();
        toPropertiesRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        toXMLRadioButton.setText("Covert to XML");
        toXMLRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                toXMLRadioButtonActionPerformed(evt);
            }
        });

        toPropertiesRadioButton.setText("Covert to properties");
        toPropertiesRadioButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                toPropertiesRadioButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("No opened file");

        jMenu1.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setText("Convert and Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuItem);

        saveAsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveAsMenuItem.setText("Convert and Save as");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveAsMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(toXMLRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(toPropertiesRadioButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toXMLRadioButton)
                    .addComponent(toPropertiesRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_openMenuItemActionPerformed
    {//GEN-HEADEREND:event_openMenuItemActionPerformed
        jFileChooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooser1.setMultiSelectionEnabled(false);
        int retVal = jFileChooser1.showOpenDialog(this);
        if(retVal == JFileChooser.APPROVE_OPTION)
        {
            input = jFileChooser1.getSelectedFile();
            if(!input.canRead())
            {
                errorBox("Cannot read file", "Cannot read file");
                input = null;
            }
            saveMenuItem.setEnabled(true);
            saveAsMenuItem.setEnabled(true);
            jLabel1.setText("Opened file: " + input.getName());
        }
        
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveMenuItemActionPerformed
    {//GEN-HEADEREND:event_saveMenuItemActionPerformed
        if(input == null)
            errorBox("No open input file cannot convert.", "No open file");
        else
        {
            convertorSwingWorker = new ConvertorSwingWorker();
            convertorSwingWorker.execute();
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void toPropertiesRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_toPropertiesRadioButtonActionPerformed
    {//GEN-HEADEREND:event_toPropertiesRadioButtonActionPerformed
        if (toPropertiesRadioButton.isSelected())
        {
            toXMLRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_toPropertiesRadioButtonActionPerformed

    private void toXMLRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_toXMLRadioButtonActionPerformed
    {//GEN-HEADEREND:event_toXMLRadioButtonActionPerformed
        if (toXMLRadioButton.isSelected())
        {
            toPropertiesRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_toXMLRadioButtonActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveAsMenuItemActionPerformed
    {//GEN-HEADEREND:event_saveAsMenuItemActionPerformed
        jFileChooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooser1.setMultiSelectionEnabled(false);
        int retVal = jFileChooser1.showSaveDialog(this);
        if(retVal == JFileChooser.APPROVE_OPTION)
        {
            output = jFileChooser1.getSelectedFile();
            convertorSwingWorker = new ConvertorSwingWorker();
            convertorSwingWorker.execute();
        }
    }//GEN-LAST:event_saveAsMenuItemActionPerformed
    
    private class ConvertorSwingWorker extends SwingWorker<Void, Void>
    {

        @Override
        protected Void doInBackground() throws Exception
        {
            if(toXMLRadioButton.isSelected())
            {
                Properties properties = new Properties();
                InputStream is = new FileInputStream(input);
                properties.load(is);
                XmlPropertiesBuilder xpb = new XmlPropertiesBuilder(properties);
                if(output != null)
                    xpb.saveXmlDocument(output.getAbsolutePath());
                else
                    xpb.saveXmlDocument(input.getAbsolutePath() + ".xml");
            }
            else
            {
                XmlToLog4jConverter xtlc = new XmlToLog4jConverterImpl();
                String oName;
                if(output == null)
                    oName = input.getAbsolutePath() + ".properties";
                else
                    oName = output.getAbsolutePath();
                xtlc.convertAndSave(input.getAbsolutePath(), oName);
            }
            input = null;
            output = null;
            saveMenuItem.setEnabled(false);
            saveAsMenuItem.setEnabled(false);
            jLabel1.setText("No opened file");
            return null;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Gui().setVisible(true);
            }
        });
    }
    
    private static void errorBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.ERROR_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JRadioButton toPropertiesRadioButton;
    private javax.swing.JRadioButton toXMLRadioButton;
    // End of variables declaration//GEN-END:variables
}
